#!/usr/bin/python
# -*- coding: utf-8 -*-

###############################################################################
#
# Author:      Yishan Wang <wangys8807@gmail.com>
# File:        find-the-difference.py
# Create Date: 2017-03-24
# Usage:       find-the-difference.py
# Description:
#
# LeetCode problem 389. Find the Difference
#
# Difficulty: Easy
#
# Given two strings s and t which consist of only lowercase letters.
# 
# String t is generated by random shuffling string s and then add one more
# letter at a random position.
# 
# Find the letter that was added in t.
# 
# Example:
# 
# Input:
# s = "abcd"
# t = "abcde"
# 
# Output:
# e
# 
# Explanation:
# 'e' is the letter that was added.
# 
###############################################################################

#
# Method 1. Use collections.Counter. O(n) - Time, O(n) - Space
# Run time on LeetCode: 112ms, beat 4.27%; 59ms, 49.22%
#
class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        from collections import Counter
        return (Counter(t) - Counter(s)).keys()[0]


#
# Method 2. Use XOR operation. O(n) - Time, O(n) - Space
# Run time on LeetCode: 55ms, beat 62.34%; 52ms, beat 69.18%
#
class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        import operator
        return chr(reduce(operator.xor, map(ord, s+t)))



if __name__ == "__main__":
    test_cases = [
            ("abab", "aabcb"),
            ("abab", "aabab"),
            ("abab", "aabbb"),
    ]
    solu = Solution()
    for s, t in test_cases:
        print s, t
        res = solu.findTheDifference(s, t)
        print res
        print ""
        
